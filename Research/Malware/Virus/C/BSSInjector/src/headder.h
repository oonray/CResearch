#ifndef __headder_h
#define __headder_h

struct Foffsets{
	int e_magic;
    int e_class;
	int e_version;
	int e_entry;
};

struct Fvalues{
   char *e_magic;
   uint8_t *e_class;
   uint8_t *e_version;
   uint8_t *e_entry;
} fval;

struct Foffsets foff = {.e_magic=0x0, .e_class=0x4, .e_version=0x14, .e_entry=0x18};

uint8_t *get_pointer(uint8_t *file, int offset){
		uint8_t *fp = file;
		return fp += offset;
}


int is_x64(char *fname){
	    fval.e_class = malloc(sizeof(uint8_t));
        check(fval.e_class,"Could not allocate!");

		FILE *f = fopen(fname, "rb");
		check(f,"File not found");

		fseek(f,foff.e_class,SEEK_SET);
		fread(fval.e_class,1,1,f);
		return (int)*fval.e_class == 2? 1:0;
		error:
				return -1;
}


int is_elf(char *fname){
		fval.e_magic = malloc(sizeof(uint32_t));
		check(fval.e_magic,"Could not Allocate!");

		FILE *f = fopen(fname, "rb");
		check(f,"Could not open file");

		fseek(f,foff.e_magic,SEEK_SET);
		fread(fval.e_magic,4,1,f);

		return strcmp(fval.e_magic,"ELF")?1:0;
		error:
		     return -1;
}



#endif
